// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProEventos.Persistence.Contextos;

namespace ProEventos.Persistence.Migrations
{
    [DbContext(typeof(ProEventosContext))]
    [Migration("20220611002638_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ProEventos.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductSubGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductSubGroupId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Item")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FilterId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductConfiguration");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductFilter");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductFilterItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ProductFilterItem");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Item1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Item2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Item3Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Item4Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Item1Id");

                    b.HasIndex("Item2Id");

                    b.HasIndex("Item3Id");

                    b.HasIndex("Item4Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductGrade");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductSubGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("ProductSubGroup");
                });

            modelBuilder.Entity("ProEventos.Domain.Product", b =>
                {
                    b.HasOne("ProEventos.Domain.ProductSubGroup", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductSubGroupId");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductConfiguration", b =>
                {
                    b.HasOne("ProEventos.Domain.ProductFilter", "Filter")
                        .WithMany()
                        .HasForeignKey("FilterId");

                    b.HasOne("ProEventos.Domain.Product", "Product")
                        .WithMany("Configs")
                        .HasForeignKey("ProductId");

                    b.Navigation("Filter");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductFilterItem", b =>
                {
                    b.HasOne("ProEventos.Domain.ProductFilter", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductGrade", b =>
                {
                    b.HasOne("ProEventos.Domain.ProductFilter", "Item1")
                        .WithMany()
                        .HasForeignKey("Item1Id");

                    b.HasOne("ProEventos.Domain.ProductFilter", "Item2")
                        .WithMany()
                        .HasForeignKey("Item2Id");

                    b.HasOne("ProEventos.Domain.ProductFilter", "Item3")
                        .WithMany()
                        .HasForeignKey("Item3Id");

                    b.HasOne("ProEventos.Domain.ProductFilter", "Item4")
                        .WithMany()
                        .HasForeignKey("Item4Id");

                    b.HasOne("ProEventos.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Item1");

                    b.Navigation("Item2");

                    b.Navigation("Item3");

                    b.Navigation("Item4");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductSubGroup", b =>
                {
                    b.HasOne("ProEventos.Domain.ProductGroup", "Group")
                        .WithMany("SubGroups")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ProEventos.Domain.Product", b =>
                {
                    b.Navigation("Configs");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductGroup", b =>
                {
                    b.Navigation("SubGroups");
                });

            modelBuilder.Entity("ProEventos.Domain.ProductSubGroup", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
